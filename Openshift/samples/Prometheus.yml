---

kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: prometheus
  name: prometheus
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: prometheus
  strategy:
    activeDeadlineSeconds: 21600
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - args:
            - --web.console.templates=/etc/prometheus/consoles
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/prometheus
            - --storage.tsdb.retention=2h
            - --web.enable-lifecycle
            - --storage.tsdb.wal-compression
          image: registry.ca.sbrf.ru/base/redhat/openshift4/ose-prometheus:v4.3.0-202001211731
          imagePullPolicy: Always
          name: prometheus
          ports:
            - containerPort: 9090
              protocol: TCP
          resources:
            limits:
              cpu: 400m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /prometheus
              name: prometheus-1
            - mountPath: /etc/prometheus
            name: volume-k5dem
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: prometheus
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: prometheus-1
        - configMap:
            defaultMode: 420
            name: prometheus-config
          name: volume-k5dem
  test: false
  triggers:
    - type: ConfigChange

---

kind: ConfigMap
apiVersion: v1
data:
  prometheus.yml: |
    #remote_write:
    #- url: http://influx/api/v1/prom/write?db=DBNAME
    #remote_read:
    # - url: http://influx/api/v1/prom/read?db=DBNAME
    global:
      scrape_interval: 30s
      scrape_timeout: 30s
      evaluation_interval: 30s
    scrape_configs:
    - job_name: federate
      honor_labels: true
      honor_timestamps: true
      params:
        match[]:
        - '{namespace="${namespace.name}"}'
      metrics_path: /federate
      scheme: https
      static_configs:
      - targets:
        - federate.openshift-monitoring.svc.cluster.local:9090
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
        insecure_skip_verify: false
      metric_relabel_configs:
      - action: labeldrop
        regex: prometheus_replica
      - action: labeldrop
        regex: prometheus

    - job_name: namespace
      metrics_path: /actuator/prometheus
      scheme: https
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - "${namespace.name}"
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
        insecure_skip_verify: true

    - job_name: namespace2
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - "${namespace.name}"
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
        insecure_skip_verify: false
metadata:
  name: prometheus-config

---

kind: Service
apiVersion: v1
metadata:
  labels:
    app: prometheus
    name: prometheus
spec:
  ports:
    - port: 9090
      protocol: TCP
      targetPort: 9090
  selector:
    app: prometheus
  sessionAffinity: None
  type: ClusterIP

---

apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: prometheus
  name: prometheus
spec:
  port:
    targetPort: 9090
  to:
    kind: Service
    name: prometheus
    weight: 100
  wildcardPolicy: None