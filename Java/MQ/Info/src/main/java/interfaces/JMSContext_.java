package interfaces;


import javax.jms.JMSContext;

/**
 * {@link JMSContext}
 *
 * Это объединяет в одном объекте функциональность двух отдельных объектов из API JMS 1.1: Connection и Session.
 *
 * Приложениям, работающим в веб-контейнерах Java EE и контейнерах EJB, не разрешается создавать более одного активного
 * сеанса в соединении, поэтому объединение их в один объект использует это ограничение, чтобы предложить более простой API.
 * Однако приложениям, работающим в среде Java SE или в клиентском контейнере приложений Java EE, разрешается создавать
 * несколько активных сеансов в одном соединении. Это позволяет использовать одно и то же физическое соединение в нескольких
 * потоках одновременно.
 *
 * Методы:
 * acknowledge() - Подтверждает получение всех сообщений в сессии этого сообщения. Этот метод предназначен для использования,
 *      когда сеанс имеет режим подтверждения CLIENT_ACKNOWLEDGE. Если сеанс выполняется или имеет режим подтверждения
 *      AUTO_ACKNOWLEDGE или DUPS_OK_ACKNOWLEDGE, вызов этого метода не имеет никакого эффекта. Этот метод имеет идентичное
 *      поведение с методом подтверждения в сообщении.
 *
 */
public class JMSContext_ {

    public static void main(String[] args) {
        JMSContext jmsContext = null;
        jmsContext.acknowledge();
    }
}
