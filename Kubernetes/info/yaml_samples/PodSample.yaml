apiVersion: v1   # версия
kind: Pod   # тип объекта
metadata:
  name: my-app   # имя пода
  labels:           # список меток для пода
    env: prod
    app: main
    tier: frontend
    owner: AtagaN
spec:
#  volumes:              # объявляем вольюмы
#    - name: html         # название
#      emptyDir: {}       # тип
#    - name: mongodb-data
#      persistentVolumeClaim:   #  чтобы примонтировать persistentVolume, ссылаемся на заявку (persistentVolumeClaim)
#        claimName: mongodb-pvc # которая ссылается на persistentVolume  (mongodb-pvc имя заявки)
#  imagePullSecrets:         Это позволяет извлекать образы из приватного репозитория
#    -name: mydockersecret   тип секрета docker-registry кторой содержит логин пароль и почту
  containers:
    - name: container-web   # имя контейнера
      image: nginx:latest   # образ по которому создаётся контейнер
#      volumeMounts:
#        - name: html
#          mountPath: /usr/share/nginx/html
#          readOnly: true
      ports:
        - containerPort: 80   # непонятно зачем ??
#      env:                    # задаём переменные среды для контейнера
#        - name: INTERVAL
#          value: 30
#      command: ["/bin/command"]           переопределение ENTRYPOINT и CMD образа
#      args: ["arg1", "arg2", "arg3"]

    - name: container-api
      image: tomcat:8.5.38
#      volumeMounts:
#        - name: html              # имя тома
#          mountPath: /var/htdocs  # куда примаунтить
      ports:
        - containerPort: 8080
#      readinessProbe:          проверка готовности - если модуль не проходит проверку готовности
#        exec:                  на него не будут посылаться запросы, модуль при этом не перезагружается
#          command:
#          - ls             сделать команду -ls  -> вывелся путь /var/ready
#          - /var/ready